{"version":3,"sources":["Calculator.js","App.js","serviceWorker.js","index.js"],"names":["Calculator","state","mortgageSliderValue","billsSliderValue","generalSpendingSliderValue","savings","mortgageSliderHandleChange","event","preventDefault","_this","setState","target","value","billsSliderHandleChange","generalSpendingSliderHandleChange","_this$props","this","props","incomes_data","expenditures_data","react_default","a","createElement","className","map","item","key","uniqid","htmlFor","name","type","id","amount","readOnly","from_age","to_age","min","max","step","defaultValue","onChange","Component","App","_this2","axios","get","then","response","console","log","data","incomes","expenditures","catch","error","src_Calculator","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e111b21c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport uniqid from 'uniqid';\n\nclass Calculator extends Component {\n\n  state = {\n    mortgageSliderValue: 0,\n    billsSliderValue: 0,\n    generalSpendingSliderValue: 0,\n    savings: 2800,\n  }\n\n  mortgageSliderHandleChange = (event) => {\n    event.preventDefault();\n    this.setState({\n      mortgageSliderValue: event.target.value,\n      savings: this.state.savings - event.target.value\n    });\n  }\n\n  billsSliderHandleChange = (event) => {\n    event.preventDefault();\n    this.setState({ billsSliderValue: event.target.value });\n  }\n\n  generalSpendingSliderHandleChange = (event) => {\n    event.preventDefault();\n    this.setState({ generalSpendingSliderValue: event.target.value });\n  }\n\n  render() {\n\n    const { incomes_data, expenditures_data, mortgageSliderValue, billsSliderValue, generalSpendingSliderValue, savings } = this.props;\n\n    return <div className=\"row\">\n      <div className=\"col-lg-6\">\n        <div className=\"section\">\n          <h2>Your income and spend</h2>\n          <h5><strong>Annual income</strong></h5>\n          {incomes_data.map((item) =>\n            <form key={uniqid()}>\n              <div className=\"row\">\n                <div className=\"form-group col-4\">\n                  <label htmlFor=\"formGroupExampleInput1\">{item.name}:</label>\n                  <input type=\"text\" id=\"formGroupExampleInput1\" className=\"form-control\" value={item.amount} readOnly />\n                </div>\n                <div className=\"form-group col-lg-4\">\n                  <label htmlFor=\"formGroupExampleInput2\">From age:</label>\n                  <input type=\"text\" id=\"formGroupExampleInput2\" className=\"form-control\" value={item.from_age} readOnly />\n                </div>\n                <div className=\"form-group col-lg-4\">\n                  <label htmlFor=\"formGroupExampleInput3\">To age:</label>\n                  <input type=\"text\" id=\"formGroupExampleInput3\" className=\"form-control\" value={item.to_age} readOnly />\n                </div>\n              </div>\n            </form>\n          )}\n\n          <form>\n            <h5><strong>Monthly spending</strong></h5>\n\n            {expenditures_data.map((item) =>\n              <div className=\"row\" key={uniqid()}>\n                <div className=\"form-group col-4\">\n                  <label htmlFor=\"formGroupExampleInput4\">{item.name}:</label>\n                  <input type=\"text\" id=\"formGroupExampleInput4\" className=\"form-control\" value={item.amount} readOnly />\n                </div>\n                <div className=\"form-group col-lg-4\">\n                  <label htmlFor=\"formGroupExampleInput5\">From age:</label>\n                  <input type=\"text\" id=\"formGroupExampleInput5\" className=\"form-control\" value={item.from_age} readOnly />\n                </div>\n                <div className=\"form-group col-lg-4\">\n                  <label htmlFor=\"formGroupExampleInput6\">To age:</label>\n                  <input type=\"text\" id=\"formGroupExampleInput6\" className=\"form-control\" value={item.to_age} readOnly />\n                </div>\n              </div>\n            )}\n          </form>\n        </div>\n      </div>\n\n      <div className=\"col-lg-6\">\n        <div className=\"section\">\n          <h2>Spend less</h2>\n          <h5 className=\"text-center\">Try reducing your monthly spending to see how your forecast could improve!</h5>\n          <form>\n            <div className=\"form-group\">\n              <label htmlFor=\"mortgage-slider\">Mortgage</label>\n              <span className=\"float-right\">{this.state.mortgageSliderValue}</span>\n              <input id=\"mortgage-slider\" className=\"form-control-range\" type=\"range\" min=\"1\" max=\"1199\" step=\"1\"\n                defaultValue={mortgageSliderValue}\n                onChange={this.mortgageSliderHandleChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"bills-slider\">Bills</label>\n              <span className=\"float-right\">{this.state.billsSliderValue}</span>\n              <input id=\"bills-slider\" className=\"form-control-range\" type=\"range\" min=\"1\" max=\"700\" step=\"1\"\n                defaultValue={billsSliderValue}\n                onChange={this.billsSliderHandleChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"general-spending\">General Spending</label>\n              <span className=\"float-right\">{this.state.generalSpendingSliderValue}</span>\n              <input id=\"general-spending\" className=\"form-control-range\" type=\"range\" min=\"1\" max=\"700\" step=\"1\"\n                defaultValue={generalSpendingSliderValue}\n                onChange={this.generalSpendingSliderHandleChange}\n              />\n            </div>\n          </form>\n          <h5 className=\"text-center\"><strong>This means you are saving {this.state.savings} per month</strong></h5>\n        </div>\n      </div>\n    </div>;\n  }\n}\n\nexport default Calculator;\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport uniqid from 'uniqid';\n\nimport Calculator from './Calculator';\n\nclass App extends Component {\n  state = {\n    incomes_data: [],\n    expenditures_data: []\n\n  }\n\n\n  componentDidMount() {\n    axios.get('dummyData.json')\n      .then((response) => {\n        console.log(response.data);\n        this.setState({\n          incomes_data: response.data.incomes,\n          expenditures_data: response.data.expenditures\n        });\n        console.log(this.state.incomes);\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <Calculator\n            incomes_data={this.state.incomes_data}\n            expenditures_data={this.state.expenditures_data}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}